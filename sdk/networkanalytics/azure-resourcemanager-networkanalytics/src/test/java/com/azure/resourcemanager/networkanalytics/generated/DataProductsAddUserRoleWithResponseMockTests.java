// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.networkanalytics.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.networkanalytics.NetworkAnalyticsManager;
import com.azure.resourcemanager.networkanalytics.models.DataProductUserRole;
import com.azure.resourcemanager.networkanalytics.models.RoleAssignmentCommonProperties;
import com.azure.resourcemanager.networkanalytics.models.RoleAssignmentDetail;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DataProductsAddUserRoleWithResponseMockTests {
    @Test
    public void testAddUserRoleWithResponse() throws Exception {
        String responseStr
            = "{\"roleId\":\"owzxcu\",\"principalId\":\"i\",\"userName\":\"jooxdjebw\",\"dataTypeScope\":[\"cwwfvovbvme\"],\"principalType\":\"ecivyh\",\"role\":\"Reader\",\"roleAssignmentId\":\"euojgjrwju\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        NetworkAnalyticsManager manager = NetworkAnalyticsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        RoleAssignmentDetail response = manager.dataProducts()
            .addUserRoleWithResponse("aex", "pvfadmwsrcr",
                new RoleAssignmentCommonProperties().withRoleId("vxpvgomz")
                    .withPrincipalId("fmisg")
                    .withUsername("bnbbeldawkz")
                    .withDataTypeScope(Arrays.asList("liourqhak"))
                    .withPrincipalType("uhashsfwx")
                    .withRole(DataProductUserRole.SENSITIVE_READER),
                com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("owzxcu", response.roleId());
        Assertions.assertEquals("i", response.principalId());
        Assertions.assertEquals("jooxdjebw", response.username());
        Assertions.assertEquals("cwwfvovbvme", response.dataTypeScope().get(0));
        Assertions.assertEquals("ecivyh", response.principalType());
        Assertions.assertEquals(DataProductUserRole.READER, response.role());
        Assertions.assertEquals("euojgjrwju", response.roleAssignmentId());
    }
}
