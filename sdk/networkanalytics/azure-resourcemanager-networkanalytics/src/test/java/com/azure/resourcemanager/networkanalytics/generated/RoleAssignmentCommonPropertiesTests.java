// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.networkanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkanalytics.models.DataProductUserRole;
import com.azure.resourcemanager.networkanalytics.models.RoleAssignmentCommonProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RoleAssignmentCommonPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RoleAssignmentCommonProperties model = BinaryData.fromString(
            "{\"roleId\":\"xbezyiuokktwh\",\"principalId\":\"dxwzywqsmbsurexi\",\"userName\":\"o\",\"dataTypeScope\":[\"ocfs\"],\"principalType\":\"ksymd\",\"role\":\"Reader\"}")
            .toObject(RoleAssignmentCommonProperties.class);
        Assertions.assertEquals("xbezyiuokktwh", model.roleId());
        Assertions.assertEquals("dxwzywqsmbsurexi", model.principalId());
        Assertions.assertEquals("o", model.username());
        Assertions.assertEquals("ocfs", model.dataTypeScope().get(0));
        Assertions.assertEquals("ksymd", model.principalType());
        Assertions.assertEquals(DataProductUserRole.READER, model.role());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RoleAssignmentCommonProperties model = new RoleAssignmentCommonProperties().withRoleId("xbezyiuokktwh")
            .withPrincipalId("dxwzywqsmbsurexi")
            .withUsername("o")
            .withDataTypeScope(Arrays.asList("ocfs"))
            .withPrincipalType("ksymd")
            .withRole(DataProductUserRole.READER);
        model = BinaryData.fromObject(model).toObject(RoleAssignmentCommonProperties.class);
        Assertions.assertEquals("xbezyiuokktwh", model.roleId());
        Assertions.assertEquals("dxwzywqsmbsurexi", model.principalId());
        Assertions.assertEquals("o", model.username());
        Assertions.assertEquals("ocfs", model.dataTypeScope().get(0));
        Assertions.assertEquals("ksymd", model.principalType());
        Assertions.assertEquals(DataProductUserRole.READER, model.role());
    }
}
