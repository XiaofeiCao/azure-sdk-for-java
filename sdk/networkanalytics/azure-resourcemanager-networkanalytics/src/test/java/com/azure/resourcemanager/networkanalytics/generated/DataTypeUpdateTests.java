// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.networkanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkanalytics.models.DataTypeState;
import com.azure.resourcemanager.networkanalytics.models.DataTypeUpdate;
import com.azure.resourcemanager.networkanalytics.models.DataTypeUpdateProperties;
import org.junit.jupiter.api.Assertions;

public final class DataTypeUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataTypeUpdate model = BinaryData.fromString(
            "{\"properties\":{\"state\":\"Running\",\"storageOutputRetention\":969861111,\"databaseCacheRetention\":504698966,\"databaseRetention\":745592995}}")
            .toObject(DataTypeUpdate.class);
        Assertions.assertEquals(DataTypeState.RUNNING, model.properties().state());
        Assertions.assertEquals(969861111, model.properties().storageOutputRetention());
        Assertions.assertEquals(504698966, model.properties().databaseCacheRetention());
        Assertions.assertEquals(745592995, model.properties().databaseRetention());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataTypeUpdate model
            = new DataTypeUpdate().withProperties(new DataTypeUpdateProperties().withState(DataTypeState.RUNNING)
                .withStorageOutputRetention(969861111)
                .withDatabaseCacheRetention(504698966)
                .withDatabaseRetention(745592995));
        model = BinaryData.fromObject(model).toObject(DataTypeUpdate.class);
        Assertions.assertEquals(DataTypeState.RUNNING, model.properties().state());
        Assertions.assertEquals(969861111, model.properties().storageOutputRetention());
        Assertions.assertEquals(504698966, model.properties().databaseCacheRetention());
        Assertions.assertEquals(745592995, model.properties().databaseRetention());
    }
}
