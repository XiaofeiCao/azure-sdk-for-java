// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.networkanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkanalytics.fluent.models.DataProductsCatalogInner;
import com.azure.resourcemanager.networkanalytics.models.DataProductInformation;
import com.azure.resourcemanager.networkanalytics.models.DataProductsCatalogListResult;
import com.azure.resourcemanager.networkanalytics.models.DataProductsCatalogProperties;
import com.azure.resourcemanager.networkanalytics.models.PublisherInformation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DataProductsCatalogListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataProductsCatalogListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Accepted\",\"publishers\":[{\"publisherName\":\"b\",\"dataProducts\":[{\"dataProductName\":\"tmut\",\"description\":\"uqktap\",\"dataProductVersions\":[]},{\"dataProductName\":\"pwgcuertu\",\"description\":\"kdosvqw\",\"dataProductVersions\":[]}]},{\"publisherName\":\"bmdg\",\"dataProducts\":[{\"dataProductName\":\"jfddgmbmbe\",\"description\":\"ppbhtqqrolfp\",\"dataProductVersions\":[]}]}]},\"id\":\"s\",\"name\":\"lgbquxig\",\"type\":\"yjgzjaoyfhrtxiln\"},{\"properties\":{\"provisioningState\":\"Failed\",\"publishers\":[{\"publisherName\":\"ysvlejuvf\",\"dataProducts\":[{\"dataProductName\":\"wrlyxwjkcprb\",\"description\":\"wbxgjvt\",\"dataProductVersions\":[]},{\"dataProductName\":\"vpys\",\"description\":\"zdn\",\"dataProductVersions\":[]}]},{\"publisherName\":\"uj\",\"dataProducts\":[{\"dataProductName\":\"uhmuouqfprwzwbn\",\"description\":\"uitnwuiz\",\"dataProductVersions\":[]},{\"dataProductName\":\"a\",\"description\":\"x\",\"dataProductVersions\":[]},{\"dataProductName\":\"fizuckyf\",\"description\":\"hr\",\"dataProductVersions\":[]}]}]},\"id\":\"dfvzwdzuhty\",\"name\":\"wisdkft\",\"type\":\"wxmnteiwao\"}],\"nextLink\":\"km\"}")
            .toObject(DataProductsCatalogListResult.class);
        Assertions.assertEquals("b", model.value().get(0).properties().publishers().get(0).publisherName());
        Assertions.assertEquals("tmut",
            model.value().get(0).properties().publishers().get(0).dataProducts().get(0).dataProductName());
        Assertions.assertEquals("uqktap",
            model.value().get(0).properties().publishers().get(0).dataProducts().get(0).description());
        Assertions.assertEquals("km", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataProductsCatalogListResult model = new DataProductsCatalogListResult().withValue(Arrays.asList(
            new DataProductsCatalogInner()
                .withProperties(new DataProductsCatalogProperties().withPublishers(Arrays.asList(
                    new PublisherInformation().withPublisherName("b")
                        .withDataProducts(Arrays.asList(
                            new DataProductInformation().withDataProductName("tmut")
                                .withDescription("uqktap")
                                .withDataProductVersions(Arrays.asList()),
                            new DataProductInformation().withDataProductName("pwgcuertu")
                                .withDescription("kdosvqw")
                                .withDataProductVersions(Arrays.asList()))),
                    new PublisherInformation().withPublisherName("bmdg")
                        .withDataProducts(Arrays.asList(new DataProductInformation().withDataProductName("jfddgmbmbe")
                            .withDescription("ppbhtqqrolfp")
                            .withDataProductVersions(Arrays.asList())))))),
            new DataProductsCatalogInner()
                .withProperties(new DataProductsCatalogProperties().withPublishers(Arrays.asList(
                    new PublisherInformation().withPublisherName("ysvlejuvf")
                        .withDataProducts(Arrays.asList(
                            new DataProductInformation().withDataProductName("wrlyxwjkcprb")
                                .withDescription("wbxgjvt")
                                .withDataProductVersions(Arrays.asList()),
                            new DataProductInformation().withDataProductName("vpys")
                                .withDescription("zdn")
                                .withDataProductVersions(Arrays.asList()))),
                    new PublisherInformation().withPublisherName("uj")
                        .withDataProducts(Arrays.asList(
                            new DataProductInformation().withDataProductName("uhmuouqfprwzwbn")
                                .withDescription("uitnwuiz")
                                .withDataProductVersions(Arrays.asList()),
                            new DataProductInformation().withDataProductName("a")
                                .withDescription("x")
                                .withDataProductVersions(Arrays.asList()),
                            new DataProductInformation().withDataProductName("fizuckyf")
                                .withDescription("hr")
                                .withDataProductVersions(Arrays.asList()))))))))
            .withNextLink("km");
        model = BinaryData.fromObject(model).toObject(DataProductsCatalogListResult.class);
        Assertions.assertEquals("b", model.value().get(0).properties().publishers().get(0).publisherName());
        Assertions.assertEquals("tmut",
            model.value().get(0).properties().publishers().get(0).dataProducts().get(0).dataProductName());
        Assertions.assertEquals("uqktap",
            model.value().get(0).properties().publishers().get(0).dataProducts().get(0).description());
        Assertions.assertEquals("km", model.nextLink());
    }
}
