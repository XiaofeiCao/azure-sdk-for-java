// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.networkanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkanalytics.fluent.models.ListRoleAssignmentsInner;
import com.azure.resourcemanager.networkanalytics.fluent.models.RoleAssignmentDetailInner;
import com.azure.resourcemanager.networkanalytics.models.DataProductUserRole;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ListRoleAssignmentsInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ListRoleAssignmentsInner model = BinaryData.fromString(
            "{\"count\":1391003633,\"roleAssignmentResponse\":[{\"roleId\":\"kpnpulexxbczwtr\",\"principalId\":\"wiqzbqjvsovmyo\",\"userName\":\"acspkwl\",\"dataTypeScope\":[\"dobpxjmflbvvn\",\"hrk\",\"ciwwzjuqkhr\",\"ajiwkuo\"],\"principalType\":\"oskg\",\"role\":\"Reader\",\"roleAssignmentId\":\"auu\"}]}")
            .toObject(ListRoleAssignmentsInner.class);
        Assertions.assertEquals(1391003633, model.count());
        Assertions.assertEquals("kpnpulexxbczwtr", model.roleAssignmentResponse().get(0).roleId());
        Assertions.assertEquals("wiqzbqjvsovmyo", model.roleAssignmentResponse().get(0).principalId());
        Assertions.assertEquals("acspkwl", model.roleAssignmentResponse().get(0).username());
        Assertions.assertEquals("dobpxjmflbvvn", model.roleAssignmentResponse().get(0).dataTypeScope().get(0));
        Assertions.assertEquals("oskg", model.roleAssignmentResponse().get(0).principalType());
        Assertions.assertEquals(DataProductUserRole.READER, model.roleAssignmentResponse().get(0).role());
        Assertions.assertEquals("auu", model.roleAssignmentResponse().get(0).roleAssignmentId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ListRoleAssignmentsInner model = new ListRoleAssignmentsInner().withCount(1391003633)
            .withRoleAssignmentResponse(Arrays.asList(new RoleAssignmentDetailInner().withRoleId("kpnpulexxbczwtr")
                .withPrincipalId("wiqzbqjvsovmyo")
                .withUsername("acspkwl")
                .withDataTypeScope(Arrays.asList("dobpxjmflbvvn", "hrk", "ciwwzjuqkhr", "ajiwkuo"))
                .withPrincipalType("oskg")
                .withRole(DataProductUserRole.READER)
                .withRoleAssignmentId("auu")));
        model = BinaryData.fromObject(model).toObject(ListRoleAssignmentsInner.class);
        Assertions.assertEquals(1391003633, model.count());
        Assertions.assertEquals("kpnpulexxbczwtr", model.roleAssignmentResponse().get(0).roleId());
        Assertions.assertEquals("wiqzbqjvsovmyo", model.roleAssignmentResponse().get(0).principalId());
        Assertions.assertEquals("acspkwl", model.roleAssignmentResponse().get(0).username());
        Assertions.assertEquals("dobpxjmflbvvn", model.roleAssignmentResponse().get(0).dataTypeScope().get(0));
        Assertions.assertEquals("oskg", model.roleAssignmentResponse().get(0).principalType());
        Assertions.assertEquals(DataProductUserRole.READER, model.roleAssignmentResponse().get(0).role());
        Assertions.assertEquals("auu", model.roleAssignmentResponse().get(0).roleAssignmentId());
    }
}
