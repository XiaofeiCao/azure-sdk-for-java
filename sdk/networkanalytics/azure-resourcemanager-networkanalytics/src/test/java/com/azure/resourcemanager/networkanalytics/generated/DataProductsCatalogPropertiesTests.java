// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.networkanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkanalytics.models.DataProductInformation;
import com.azure.resourcemanager.networkanalytics.models.DataProductsCatalogProperties;
import com.azure.resourcemanager.networkanalytics.models.DataProductVersion;
import com.azure.resourcemanager.networkanalytics.models.PublisherInformation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class DataProductsCatalogPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataProductsCatalogProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Accepted\",\"publishers\":[{\"publisherName\":\"zyde\",\"dataProducts\":[{\"dataProductName\":\"jwyahuxinpmqnja\",\"description\":\"wixjsprozvcp\",\"dataProductVersions\":[{\"version\":\"eg\"},{\"version\":\"vwmf\"}]}]},{\"publisherName\":\"atscmd\",\"dataProducts\":[{\"dataProductName\":\"jhulsuuvmkjo\",\"description\":\"k\",\"dataProductVersions\":[{\"version\":\"f\"},{\"version\":\"dio\"},{\"version\":\"jpslwejd\"}]},{\"dataProductName\":\"vwryoqpso\",\"description\":\"cctazakljlahbc\",\"dataProductVersions\":[{\"version\":\"ffdfdosygexpa\"},{\"version\":\"jakhmsbzjh\"}]},{\"dataProductName\":\"rzevdphlxaol\",\"description\":\"hqtrgqjbpf\",\"dataProductVersions\":[{\"version\":\"s\"},{\"version\":\"n\"},{\"version\":\"gvfcj\"},{\"version\":\"wzo\"}]}]},{\"publisherName\":\"xjtfelluwfzit\",\"dataProducts\":[{\"dataProductName\":\"peqfpjkjl\",\"description\":\"ofpdvh\",\"dataProductVersions\":[{\"version\":\"xxypininmay\"},{\"version\":\"uybbkpodep\"},{\"version\":\"oginuvamiheognar\"},{\"version\":\"zxtheotusivyevcc\"}]}]},{\"publisherName\":\"qi\",\"dataProducts\":[{\"dataProductName\":\"hungbwjzrnf\",\"description\":\"gxg\",\"dataProductVersions\":[{\"version\":\"pemvtzfkufubljof\"},{\"version\":\"qeof\"},{\"version\":\"aeqjhqjbasvms\"}]},{\"dataProductName\":\"jqul\",\"description\":\"gsntnbybkzgcwr\",\"dataProductVersions\":[{\"version\":\"lxxwrljdouskc\"},{\"version\":\"vkocrcjdkwtn\"},{\"version\":\"xbnjbiksq\"}]}]}]}")
            .toObject(DataProductsCatalogProperties.class);
        Assertions.assertEquals("zyde", model.publishers().get(0).publisherName());
        Assertions.assertEquals("jwyahuxinpmqnja", model.publishers().get(0).dataProducts().get(0).dataProductName());
        Assertions.assertEquals("wixjsprozvcp", model.publishers().get(0).dataProducts().get(0).description());
        Assertions.assertEquals("eg",
            model.publishers().get(0).dataProducts().get(0).dataProductVersions().get(0).version());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataProductsCatalogProperties model = new DataProductsCatalogProperties().withPublishers(Arrays.asList(
            new PublisherInformation().withPublisherName("zyde")
                .withDataProducts(Arrays.asList(new DataProductInformation().withDataProductName("jwyahuxinpmqnja")
                    .withDescription("wixjsprozvcp")
                    .withDataProductVersions(Arrays.asList(new DataProductVersion().withVersion("eg"),
                        new DataProductVersion().withVersion("vwmf"))))),
            new PublisherInformation().withPublisherName("atscmd")
                .withDataProducts(Arrays.asList(new DataProductInformation().withDataProductName("jhulsuuvmkjo")
                    .withDescription("k")
                    .withDataProductVersions(Arrays.asList(new DataProductVersion().withVersion("f"),
                        new DataProductVersion().withVersion("dio"), new DataProductVersion().withVersion("jpslwejd"))),
                    new DataProductInformation().withDataProductName("vwryoqpso")
                        .withDescription("cctazakljlahbc")
                        .withDataProductVersions(Arrays.asList(new DataProductVersion().withVersion("ffdfdosygexpa"),
                            new DataProductVersion().withVersion("jakhmsbzjh"))),
                    new DataProductInformation().withDataProductName("rzevdphlxaol")
                        .withDescription("hqtrgqjbpf")
                        .withDataProductVersions(Arrays.asList(new DataProductVersion().withVersion("s"),
                            new DataProductVersion().withVersion("n"), new DataProductVersion().withVersion("gvfcj"),
                            new DataProductVersion().withVersion("wzo"))))),
            new PublisherInformation().withPublisherName("xjtfelluwfzit")
                .withDataProducts(Arrays.asList(new DataProductInformation().withDataProductName("peqfpjkjl")
                    .withDescription("ofpdvh")
                    .withDataProductVersions(Arrays.asList(new DataProductVersion().withVersion("xxypininmay"),
                        new DataProductVersion().withVersion("uybbkpodep"),
                        new DataProductVersion().withVersion("oginuvamiheognar"),
                        new DataProductVersion().withVersion("zxtheotusivyevcc"))))),
            new PublisherInformation().withPublisherName("qi")
                .withDataProducts(Arrays.asList(
                    new DataProductInformation().withDataProductName("hungbwjzrnf")
                        .withDescription("gxg")
                        .withDataProductVersions(Arrays.asList(new DataProductVersion().withVersion("pemvtzfkufubljof"),
                            new DataProductVersion().withVersion("qeof"),
                            new DataProductVersion().withVersion("aeqjhqjbasvms"))),
                    new DataProductInformation().withDataProductName("jqul")
                        .withDescription("gsntnbybkzgcwr")
                        .withDataProductVersions(Arrays.asList(new DataProductVersion().withVersion("lxxwrljdouskc"),
                            new DataProductVersion().withVersion("vkocrcjdkwtn"),
                            new DataProductVersion().withVersion("xbnjbiksq")))))));
        model = BinaryData.fromObject(model).toObject(DataProductsCatalogProperties.class);
        Assertions.assertEquals("zyde", model.publishers().get(0).publisherName());
        Assertions.assertEquals("jwyahuxinpmqnja", model.publishers().get(0).dataProducts().get(0).dataProductName());
        Assertions.assertEquals("wixjsprozvcp", model.publishers().get(0).dataProducts().get(0).description());
        Assertions.assertEquals("eg",
            model.publishers().get(0).dataProducts().get(0).dataProductVersions().get(0).version());
    }
}
