// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.networkanalytics.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.networkanalytics.models.DataProductInformation;
import com.azure.resourcemanager.networkanalytics.models.DataProductVersion;
import com.azure.resourcemanager.networkanalytics.models.PublisherInformation;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PublisherInformationTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PublisherInformation model = BinaryData.fromString(
            "{\"publisherName\":\"gls\",\"dataProducts\":[{\"dataProductName\":\"inqpjwnzll\",\"description\":\"fmppe\",\"dataProductVersions\":[{\"version\":\"vmgxsab\"},{\"version\":\"yqduujit\"},{\"version\":\"jczdzevndh\"},{\"version\":\"rwpdappdsbdkvwrw\"}]},{\"dataProductName\":\"feusnhut\",\"description\":\"eltmrldhugjzzdat\",\"dataProductVersions\":[{\"version\":\"hocdgeab\"},{\"version\":\"gphuticndvka\"},{\"version\":\"zwyiftyhxhur\"},{\"version\":\"k\"}]},{\"dataProductName\":\"tyxolniwpwc\",\"description\":\"kjfkg\",\"dataProductVersions\":[{\"version\":\"w\"},{\"version\":\"klryplwck\"}]},{\"dataProductName\":\"asy\",\"description\":\"pnddhsgcbacphejk\",\"dataProductVersions\":[{\"version\":\"ynqgoulzndlikwyq\"},{\"version\":\"gfgibm\"}]}]}")
            .toObject(PublisherInformation.class);
        Assertions.assertEquals("gls", model.publisherName());
        Assertions.assertEquals("inqpjwnzll", model.dataProducts().get(0).dataProductName());
        Assertions.assertEquals("fmppe", model.dataProducts().get(0).description());
        Assertions.assertEquals("vmgxsab", model.dataProducts().get(0).dataProductVersions().get(0).version());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PublisherInformation model = new PublisherInformation().withPublisherName("gls")
            .withDataProducts(Arrays.asList(
                new DataProductInformation().withDataProductName("inqpjwnzll")
                    .withDescription("fmppe")
                    .withDataProductVersions(Arrays.asList(new DataProductVersion().withVersion("vmgxsab"),
                        new DataProductVersion().withVersion("yqduujit"),
                        new DataProductVersion().withVersion("jczdzevndh"),
                        new DataProductVersion().withVersion("rwpdappdsbdkvwrw"))),
                new DataProductInformation().withDataProductName("feusnhut")
                    .withDescription("eltmrldhugjzzdat")
                    .withDataProductVersions(Arrays.asList(new DataProductVersion().withVersion("hocdgeab"),
                        new DataProductVersion().withVersion("gphuticndvka"),
                        new DataProductVersion().withVersion("zwyiftyhxhur"),
                        new DataProductVersion().withVersion("k"))),
                new DataProductInformation().withDataProductName("tyxolniwpwc")
                    .withDescription("kjfkg")
                    .withDataProductVersions(Arrays.asList(new DataProductVersion().withVersion("w"),
                        new DataProductVersion().withVersion("klryplwck"))),
                new DataProductInformation().withDataProductName("asy")
                    .withDescription("pnddhsgcbacphejk")
                    .withDataProductVersions(Arrays.asList(new DataProductVersion().withVersion("ynqgoulzndlikwyq"),
                        new DataProductVersion().withVersion("gfgibm")))));
        model = BinaryData.fromObject(model).toObject(PublisherInformation.class);
        Assertions.assertEquals("gls", model.publisherName());
        Assertions.assertEquals("inqpjwnzll", model.dataProducts().get(0).dataProductName());
        Assertions.assertEquals("fmppe", model.dataProducts().get(0).description());
        Assertions.assertEquals("vmgxsab", model.dataProducts().get(0).dataProductVersions().get(0).version());
    }
}
