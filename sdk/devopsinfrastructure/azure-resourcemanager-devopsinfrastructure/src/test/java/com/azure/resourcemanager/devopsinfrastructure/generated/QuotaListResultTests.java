// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devopsinfrastructure.fluent.models.QuotaInner;
import com.azure.resourcemanager.devopsinfrastructure.models.QuotaListResult;
import com.azure.resourcemanager.devopsinfrastructure.models.QuotaName;
import com.azure.resourcemanager.devopsinfrastructure.models.QuotaProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class QuotaListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuotaListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"unit\":\"hcbonqvpkvlr\",\"currentValue\":8356652594012812483,\"limit\":1701680465811052469,\"name\":{\"value\":\"eipheoflokeyy\",\"localizedValue\":\"nj\"}},\"id\":\"lwtgrhpdj\",\"name\":\"jumasx\",\"type\":\"zj\"},{\"properties\":{\"unit\":\"yegu\",\"currentValue\":7150942946932473894,\"limit\":167225280190427319,\"name\":{\"value\":\"hejjz\",\"localizedValue\":\"dudgwdslfhot\"}},\"id\":\"cynpwlbjnp\",\"name\":\"acfta\",\"type\":\"ehxnltyfsop\"},{\"properties\":{\"unit\":\"suesnzw\",\"currentValue\":1427278717950789116,\"limit\":3766133720110583726,\"name\":{\"value\":\"orxzdmohctbqvud\",\"localizedValue\":\"dndnvow\"}},\"id\":\"jjugwdkcglhslaz\",\"name\":\"dyggdtjixhbku\",\"type\":\"fqweykhmene\"},{\"properties\":{\"unit\":\"yexfwh\",\"currentValue\":8033424464657164623,\"limit\":638447831708317440,\"name\":{\"value\":\"yvdcsitynnaa\",\"localizedValue\":\"ectehf\"}},\"id\":\"scjeypv\",\"name\":\"ezrkgqhcjrefo\",\"type\":\"gm\"}],\"nextLink\":\"sle\"}")
            .toObject(QuotaListResult.class);
        Assertions.assertEquals("hcbonqvpkvlr", model.value().get(0).properties().unit());
        Assertions.assertEquals(8356652594012812483L, model.value().get(0).properties().currentValue());
        Assertions.assertEquals(1701680465811052469L, model.value().get(0).properties().limit());
        Assertions.assertEquals("eipheoflokeyy", model.value().get(0).properties().name().value());
        Assertions.assertEquals("nj", model.value().get(0).properties().name().localizedValue());
        Assertions.assertEquals("sle", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuotaListResult model = new QuotaListResult()
            .withValue(Arrays.asList(
                new QuotaInner().withProperties(new QuotaProperties().withUnit("hcbonqvpkvlr")
                    .withCurrentValue(8356652594012812483L)
                    .withLimit(1701680465811052469L)
                    .withName(new QuotaName().withValue("eipheoflokeyy").withLocalizedValue("nj"))),
                new QuotaInner().withProperties(new QuotaProperties().withUnit("yegu")
                    .withCurrentValue(7150942946932473894L)
                    .withLimit(167225280190427319L)
                    .withName(new QuotaName().withValue("hejjz").withLocalizedValue("dudgwdslfhot"))),
                new QuotaInner().withProperties(new QuotaProperties().withUnit("suesnzw")
                    .withCurrentValue(1427278717950789116L)
                    .withLimit(3766133720110583726L)
                    .withName(new QuotaName().withValue("orxzdmohctbqvud").withLocalizedValue("dndnvow"))),
                new QuotaInner().withProperties(new QuotaProperties().withUnit("yexfwh")
                    .withCurrentValue(8033424464657164623L)
                    .withLimit(638447831708317440L)
                    .withName(new QuotaName().withValue("yvdcsitynnaa").withLocalizedValue("ectehf")))))
            .withNextLink("sle");
        model = BinaryData.fromObject(model).toObject(QuotaListResult.class);
        Assertions.assertEquals("hcbonqvpkvlr", model.value().get(0).properties().unit());
        Assertions.assertEquals(8356652594012812483L, model.value().get(0).properties().currentValue());
        Assertions.assertEquals(1701680465811052469L, model.value().get(0).properties().limit());
        Assertions.assertEquals("eipheoflokeyy", model.value().get(0).properties().name().value());
        Assertions.assertEquals("nj", model.value().get(0).properties().name().localizedValue());
        Assertions.assertEquals("sle", model.nextLink());
    }
}
