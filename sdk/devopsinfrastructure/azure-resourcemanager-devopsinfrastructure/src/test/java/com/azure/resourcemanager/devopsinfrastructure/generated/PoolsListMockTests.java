// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devopsinfrastructure.DevOpsInfrastructureManager;
import com.azure.resourcemanager.devopsinfrastructure.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devopsinfrastructure.models.Pool;
import com.azure.resourcemanager.devopsinfrastructure.models.ProvisioningState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PoolsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Provisioning\",\"maximumConcurrency\":2133271340,\"organizationProfile\":{\"kind\":\"OrganizationProfile\"},\"agentProfile\":{\"kind\":\"AgentProfile\",\"resourcePredictions\":\"datapjflcxogao\",\"resourcePredictionsProfile\":{\"kind\":\"ResourcePredictionsProfile\"}},\"fabricProfile\":{\"kind\":\"FabricProfile\"},\"devCenterProjectResourceId\":\"nzmnsikvm\"},\"identity\":{\"principalId\":\"3feff4dd-6e00-43dc-a6b3-72780fa319fa\",\"tenantId\":\"6e3ceb67-f99e-4065-a3bf-607a7326666c\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"tfz\":{\"principalId\":\"b1a40917-70e2-4eaa-82c0-afe0331629f9\",\"clientId\":\"7138f9c8-b152-4492-99c4-8a11d82773ea\"},\"hvhgureod\":{\"principalId\":\"3df36b05-2305-49aa-b267-30c5fa395aed\",\"clientId\":\"fd769e8e-0732-4092-9c84-e3b0cbd9fb1b\"},\"bdagxt\":{\"principalId\":\"c70cd1cf-5e24-4e03-976c-7982f205dec7\",\"clientId\":\"052fe7ad-0625-446d-975b-eed3638c33b6\"},\"dxbx\":{\"principalId\":\"5b74ad3b-8a96-43b1-b967-dd78d03a2348\",\"clientId\":\"5796fcd4-eb70-4273-84d6-c96474e656e8\"}}},\"location\":\"kbogqxndlkzgx\",\"tags\":{\"byyntwlrbqt\":\"iplbpodxunkbebxm\"},\"id\":\"oievseotgqrlltm\",\"name\":\"wlauwzizxbmpg\",\"type\":\"jefuzmuvpbttdumo\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevOpsInfrastructureManager manager = DevOpsInfrastructureManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Pool> response = manager.pools().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("kbogqxndlkzgx", response.iterator().next().location());
        Assertions.assertEquals("iplbpodxunkbebxm", response.iterator().next().tags().get("byyntwlrbqt"));
        Assertions.assertEquals(ProvisioningState.PROVISIONING,
            response.iterator().next().properties().provisioningState());
        Assertions.assertEquals(2133271340, response.iterator().next().properties().maximumConcurrency());
        Assertions.assertEquals("nzmnsikvm", response.iterator().next().properties().devCenterProjectResourceId());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            response.iterator().next().identity().type());
    }
}
