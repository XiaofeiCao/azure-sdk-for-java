// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devopsinfrastructure.fluent.models.ResourceDetailsObjectInner;
import com.azure.resourcemanager.devopsinfrastructure.models.ResourceDetailsObjectListResult;
import com.azure.resourcemanager.devopsinfrastructure.models.ResourceDetailsObjectProperties;
import com.azure.resourcemanager.devopsinfrastructure.models.ResourceStatus;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ResourceDetailsObjectListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ResourceDetailsObjectListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"status\":\"Reimaging\",\"image\":\"bkc\",\"imageVersion\":\"x\"},\"id\":\"bttk\",\"name\":\"h\",\"type\":\"wpn\"},{\"properties\":{\"status\":\"Ready\",\"image\":\"oqnermclfpl\",\"imageVersion\":\"hoxus\"},\"id\":\"pabgyeps\",\"name\":\"jta\",\"type\":\"qugxywpmueefjzwf\"},{\"properties\":{\"status\":\"NotReady\",\"image\":\"ujidsuyono\",\"imageVersion\":\"glaocq\"},\"id\":\"ccm\",\"name\":\"yudxytlmoy\",\"type\":\"xv\"}],\"nextLink\":\"u\"}")
            .toObject(ResourceDetailsObjectListResult.class);
        Assertions.assertEquals(ResourceStatus.REIMAGING, model.value().get(0).properties().status());
        Assertions.assertEquals("bkc", model.value().get(0).properties().image());
        Assertions.assertEquals("x", model.value().get(0).properties().imageVersion());
        Assertions.assertEquals("u", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ResourceDetailsObjectListResult model = new ResourceDetailsObjectListResult().withValue(Arrays.asList(
            new ResourceDetailsObjectInner()
                .withProperties(new ResourceDetailsObjectProperties().withStatus(ResourceStatus.REIMAGING)
                    .withImage("bkc")
                    .withImageVersion("x")),
            new ResourceDetailsObjectInner()
                .withProperties(new ResourceDetailsObjectProperties().withStatus(ResourceStatus.READY)
                    .withImage("oqnermclfpl")
                    .withImageVersion("hoxus")),
            new ResourceDetailsObjectInner()
                .withProperties(new ResourceDetailsObjectProperties().withStatus(ResourceStatus.NOT_READY)
                    .withImage("ujidsuyono")
                    .withImageVersion("glaocq"))))
            .withNextLink("u");
        model = BinaryData.fromObject(model).toObject(ResourceDetailsObjectListResult.class);
        Assertions.assertEquals(ResourceStatus.REIMAGING, model.value().get(0).properties().status());
        Assertions.assertEquals("bkc", model.value().get(0).properties().image());
        Assertions.assertEquals("x", model.value().get(0).properties().imageVersion());
        Assertions.assertEquals("u", model.nextLink());
    }
}
