// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devopsinfrastructure.DevOpsInfrastructureManager;
import com.azure.resourcemanager.devopsinfrastructure.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devopsinfrastructure.models.Pool;
import com.azure.resourcemanager.devopsinfrastructure.models.ProvisioningState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PoolsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Provisioning\",\"maximumConcurrency\":1701061135,\"organizationProfile\":{\"kind\":\"OrganizationProfile\"},\"agentProfile\":{\"kind\":\"AgentProfile\",\"resourcePredictions\":\"datavo\",\"resourcePredictionsProfile\":{\"kind\":\"ResourcePredictionsProfile\"}},\"fabricProfile\":{\"kind\":\"FabricProfile\"},\"devCenterProjectResourceId\":\"sotbob\"},\"identity\":{\"principalId\":\"8ef676f1-2d1f-4b5d-9357-047a72cf8430\",\"tenantId\":\"8c2227ed-f0ed-448e-9a33-0f016ff2a437\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"hdldwmgxcxrsl\":{\"principalId\":\"89590f3c-894e-464a-9fb7-2869bb0de653\",\"clientId\":\"83274d85-bed8-4753-84f2-9dda87db5ff5\"},\"twuoegrpkhjwni\":{\"principalId\":\"462a9833-c4eb-43bd-ab76-63a7ba1a2da2\",\"clientId\":\"9c3b1fdb-aa6e-4f7d-80e2-3a9bd2217ab3\"},\"luicpdggkzzlvmbm\":{\"principalId\":\"af618e97-b2a1-42fd-abc8-bf6d2144fc87\",\"clientId\":\"1444b87b-5c66-48d4-bfd4-b226897440c4\"}}},\"location\":\"xmodf\",\"tags\":{\"sbpfvmwyhr\":\"fy\"},\"id\":\"ouyftaakc\",\"name\":\"wiyzvqtmnubexkp\",\"type\":\"ksmond\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevOpsInfrastructureManager manager = DevOpsInfrastructureManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Pool response = manager.pools()
            .getByResourceGroupWithResponse("gafcnihgwqapnedg", "bcvkcvqvpkeq", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("xmodf", response.location());
        Assertions.assertEquals("fy", response.tags().get("sbpfvmwyhr"));
        Assertions.assertEquals(ProvisioningState.PROVISIONING, response.properties().provisioningState());
        Assertions.assertEquals(1701061135, response.properties().maximumConcurrency());
        Assertions.assertEquals("sotbob", response.properties().devCenterProjectResourceId());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED, response.identity().type());
    }
}
