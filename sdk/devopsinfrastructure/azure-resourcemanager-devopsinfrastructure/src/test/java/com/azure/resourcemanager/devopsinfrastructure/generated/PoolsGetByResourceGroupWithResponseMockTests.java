// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devopsinfrastructure.DevOpsInfrastructureManager;
import com.azure.resourcemanager.devopsinfrastructure.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.devopsinfrastructure.models.Pool;
import com.azure.resourcemanager.devopsinfrastructure.models.ProvisioningState;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PoolsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Failed\",\"maximumConcurrency\":92665469,\"organizationProfile\":{\"kind\":\"OrganizationProfile\"},\"agentProfile\":{\"kind\":\"AgentProfile\",\"resourcePredictions\":\"dataobl\",\"resourcePredictionsProfile\":{\"kind\":\"ResourcePredictionsProfile\"}},\"fabricProfile\":{\"kind\":\"FabricProfile\"},\"devCenterProjectResourceId\":\"k\"},\"identity\":{\"tenantId\":\"pe\",\"principalId\":\"wfbkrvrns\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"\":{\"uvwbhsqfs\":{\"clientId\":\"hxcr\",\"principalId\":\"fovasr\"},\"t\":{\"clientId\":\"cgjbirxbp\",\"principalId\":\"srfbjfdtwss\"}}}},\"location\":\"pvjzbe\",\"tags\":{\"uoujmkcjhwqy\":\"zznfqqnvwpmqta\"},\"id\":\"jrybnwjewgdrjer\",\"name\":\"naenqpehindo\",\"type\":\"gmifthnzd\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevOpsInfrastructureManager manager = DevOpsInfrastructureManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Pool response = manager.pools()
            .getByResourceGroupWithResponse("vtcqaqtdo", "mcbxvwvxysl", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("pvjzbe", response.location());
        Assertions.assertEquals("zznfqqnvwpmqta", response.tags().get("uoujmkcjhwqy"));
        Assertions.assertEquals(ProvisioningState.FAILED, response.properties().provisioningState());
        Assertions.assertEquals(92665469, response.properties().maximumConcurrency());
        Assertions.assertEquals("k", response.properties().devCenterProjectResourceId());
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, response.identity().type());
    }
}
