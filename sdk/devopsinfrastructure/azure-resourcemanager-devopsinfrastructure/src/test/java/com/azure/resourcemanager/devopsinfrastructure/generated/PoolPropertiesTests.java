// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devopsinfrastructure.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.devopsinfrastructure.models.AgentProfile;
import com.azure.resourcemanager.devopsinfrastructure.models.FabricProfile;
import com.azure.resourcemanager.devopsinfrastructure.models.OrganizationProfile;
import com.azure.resourcemanager.devopsinfrastructure.models.PoolProperties;
import com.azure.resourcemanager.devopsinfrastructure.models.ProvisioningState;
import com.azure.resourcemanager.devopsinfrastructure.models.ResourcePredictionsProfile;
import org.junit.jupiter.api.Assertions;

public final class PoolPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PoolProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Deleting\",\"maximumConcurrency\":1856462665,\"organizationProfile\":{\"kind\":\"OrganizationProfile\"},\"agentProfile\":{\"kind\":\"AgentProfile\",\"resourcePredictions\":\"datana\",\"resourcePredictionsProfile\":{\"kind\":\"ResourcePredictionsProfile\"}},\"fabricProfile\":{\"kind\":\"FabricProfile\"},\"devCenterProjectResourceId\":\"mhjrunmpxttdbhr\"}")
            .toObject(PoolProperties.class);
        Assertions.assertEquals(ProvisioningState.DELETING, model.provisioningState());
        Assertions.assertEquals(1856462665, model.maximumConcurrency());
        Assertions.assertEquals("mhjrunmpxttdbhr", model.devCenterProjectResourceId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PoolProperties model = new PoolProperties().withProvisioningState(ProvisioningState.DELETING)
            .withMaximumConcurrency(1856462665)
            .withOrganizationProfile(new OrganizationProfile())
            .withAgentProfile(new AgentProfile().withResourcePredictions("datana")
                .withResourcePredictionsProfile(new ResourcePredictionsProfile()))
            .withFabricProfile(new FabricProfile())
            .withDevCenterProjectResourceId("mhjrunmpxttdbhr");
        model = BinaryData.fromObject(model).toObject(PoolProperties.class);
        Assertions.assertEquals(ProvisioningState.DELETING, model.provisioningState());
        Assertions.assertEquals(1856462665, model.maximumConcurrency());
        Assertions.assertEquals("mhjrunmpxttdbhr", model.devCenterProjectResourceId());
    }
}
