// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.FaultSimulationDetails;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.FaultSimulationStatus;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.SfmcOperationStatus;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;

public final class FaultSimulationDetailsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FaultSimulationDetails model = BinaryData.fromString(
            "{\"clusterId\":\"ypatdooaojkniod\",\"operationId\":\"oebwnujhemms\",\"nodeTypeFaultSimulation\":[{\"nodeTypeName\":\"c\",\"status\":\"Stopping\",\"operationId\":\"jinfw\",\"operationStatus\":\"Started\"},{\"nodeTypeName\":\"tkacj\",\"status\":\"StartFailed\",\"operationId\":\"dlfoakggkfp\",\"operationStatus\":\"Aborted\"}],\"parameters\":{\"faultKind\":\"FaultSimulationContent\",\"force\":true,\"constraints\":{\"expirationTime\":\"2021-11-09T20:51:35Z\"}}}")
            .toObject(FaultSimulationDetails.class);
        Assertions.assertEquals("ypatdooaojkniod", model.clusterId());
        Assertions.assertEquals("oebwnujhemms", model.operationId());
        Assertions.assertEquals("c", model.nodeTypeFaultSimulation().get(0).nodeTypeName());
        Assertions.assertEquals(FaultSimulationStatus.STOPPING, model.nodeTypeFaultSimulation().get(0).status());
        Assertions.assertEquals("jinfw", model.nodeTypeFaultSimulation().get(0).operationId());
        Assertions.assertEquals(SfmcOperationStatus.STARTED, model.nodeTypeFaultSimulation().get(0).operationStatus());
        Assertions.assertEquals(true, model.parameters().force());
        Assertions.assertEquals(OffsetDateTime.parse("2021-11-09T20:51:35Z"),
            model.parameters().constraints().expirationTime());
    }
}
