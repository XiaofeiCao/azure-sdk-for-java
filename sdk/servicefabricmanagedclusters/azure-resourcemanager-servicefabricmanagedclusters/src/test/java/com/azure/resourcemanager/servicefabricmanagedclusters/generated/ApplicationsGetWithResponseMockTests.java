// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.servicefabricmanagedclusters.ServicefabricmanagedclustersManager;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ApplicationResource;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.FailureAction;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ManagedIdentityType;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.RollingUpgradeMode;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ApplicationsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"wagohbuffk\",\"version\":\"qem\",\"parameters\":{\"jfutacoebj\":\"mxtd\",\"guaadraufactkahz\":\"ewzcjznmwcp\"},\"upgradePolicy\":{\"applicationHealthPolicy\":{\"considerWarningAsError\":true,\"maxPercentUnhealthyDeployedApplications\":73539511,\"defaultServiceTypeHealthPolicy\":{\"maxPercentUnhealthyServices\":1614999854,\"maxPercentUnhealthyPartitionsPerService\":1921546293,\"maxPercentUnhealthyReplicasPerPartition\":347971797},\"serviceTypeHealthPolicyMap\":{\"eekulfgslqubkwd\":{\"maxPercentUnhealthyServices\":113664127,\"maxPercentUnhealthyPartitionsPerService\":1699726584,\"maxPercentUnhealthyReplicasPerPartition\":1959547059},\"d\":{\"maxPercentUnhealthyServices\":702643575,\"maxPercentUnhealthyPartitionsPerService\":2030075200,\"maxPercentUnhealthyReplicasPerPartition\":765854883},\"jbazpjuohminy\":{\"maxPercentUnhealthyServices\":1559984904,\"maxPercentUnhealthyPartitionsPerService\":203229589,\"maxPercentUnhealthyReplicasPerPartition\":2108472563},\"rwm\":{\"maxPercentUnhealthyServices\":1955793903,\"maxPercentUnhealthyPartitionsPerService\":1572022243,\"maxPercentUnhealthyReplicasPerPartition\":930110171}}},\"forceRestart\":true,\"rollingUpgradeMonitoringPolicy\":{\"failureAction\":\"Rollback\",\"healthCheckWaitDuration\":\"klvxwmyg\",\"healthCheckStableDuration\":\"xpgpq\",\"healthCheckRetryTimeout\":\"hiszepnnbjcrxgib\",\"upgradeTimeout\":\"daxconfozauorsuk\",\"upgradeDomainTimeout\":\"kwbqplhlvnuu\"},\"instanceCloseDelayDuration\":8249216187823055571,\"upgradeMode\":\"UnmonitoredAuto\",\"upgradeReplicaSetCheckTimeout\":7045549218691241885,\"recreateApplication\":true},\"managedIdentities\":[{\"name\":\"wey\",\"principalId\":\"qdunvmnnrwrbior\"},{\"name\":\"talywjhhgdnhxms\",\"principalId\":\"v\"},{\"name\":\"omi\",\"principalId\":\"ox\"}]},\"tags\":{\"chvcyyysfgdo\":\"ufiqndieuzaof\",\"qonmacj\":\"cubiipuipw\"},\"identity\":{\"principalId\":\"izsh\",\"tenantId\":\"cimpevfg\",\"type\":\"None\",\"userAssignedIdentities\":{\"jfnynszqujizdvoq\":{\"principalId\":\"lbywdxsm\",\"clientId\":\"cwrwfs\"},\"ksbpimlqoljx\":{\"principalId\":\"ibyowbblgyavutp\",\"clientId\":\"joxoism\"}}},\"location\":\"gxxlxsffgcvizq\",\"id\":\"wlvwlyoupf\",\"name\":\"fbkjubdyhgkfmi\",\"type\":\"sgow\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ServicefabricmanagedclustersManager manager = ServicefabricmanagedclustersManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        ApplicationResource response = manager.applications()
            .getWithResponse("qgzsles", "cbhernntiewdj", "vbquwr", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("ufiqndieuzaof", response.tags().get("chvcyyysfgdo"));
        Assertions.assertEquals(ManagedIdentityType.NONE, response.identity().type());
        Assertions.assertEquals("gxxlxsffgcvizq", response.location());
        Assertions.assertEquals("qem", response.version());
        Assertions.assertEquals("mxtd", response.parameters().get("jfutacoebj"));
        Assertions.assertEquals(true, response.upgradePolicy().applicationHealthPolicy().considerWarningAsError());
        Assertions.assertEquals(73539511,
            response.upgradePolicy().applicationHealthPolicy().maxPercentUnhealthyDeployedApplications());
        Assertions.assertEquals(1614999854,
            response.upgradePolicy()
                .applicationHealthPolicy()
                .defaultServiceTypeHealthPolicy()
                .maxPercentUnhealthyServices());
        Assertions.assertEquals(1921546293,
            response.upgradePolicy()
                .applicationHealthPolicy()
                .defaultServiceTypeHealthPolicy()
                .maxPercentUnhealthyPartitionsPerService());
        Assertions.assertEquals(347971797,
            response.upgradePolicy()
                .applicationHealthPolicy()
                .defaultServiceTypeHealthPolicy()
                .maxPercentUnhealthyReplicasPerPartition());
        Assertions.assertEquals(113664127,
            response.upgradePolicy()
                .applicationHealthPolicy()
                .serviceTypeHealthPolicyMap()
                .get("eekulfgslqubkwd")
                .maxPercentUnhealthyServices());
        Assertions.assertEquals(1699726584,
            response.upgradePolicy()
                .applicationHealthPolicy()
                .serviceTypeHealthPolicyMap()
                .get("eekulfgslqubkwd")
                .maxPercentUnhealthyPartitionsPerService());
        Assertions.assertEquals(1959547059,
            response.upgradePolicy()
                .applicationHealthPolicy()
                .serviceTypeHealthPolicyMap()
                .get("eekulfgslqubkwd")
                .maxPercentUnhealthyReplicasPerPartition());
        Assertions.assertEquals(true, response.upgradePolicy().forceRestart());
        Assertions.assertEquals(FailureAction.ROLLBACK,
            response.upgradePolicy().rollingUpgradeMonitoringPolicy().failureAction());
        Assertions.assertEquals("klvxwmyg",
            response.upgradePolicy().rollingUpgradeMonitoringPolicy().healthCheckWaitDuration());
        Assertions.assertEquals("xpgpq",
            response.upgradePolicy().rollingUpgradeMonitoringPolicy().healthCheckStableDuration());
        Assertions.assertEquals("hiszepnnbjcrxgib",
            response.upgradePolicy().rollingUpgradeMonitoringPolicy().healthCheckRetryTimeout());
        Assertions.assertEquals("daxconfozauorsuk",
            response.upgradePolicy().rollingUpgradeMonitoringPolicy().upgradeTimeout());
        Assertions.assertEquals("kwbqplhlvnuu",
            response.upgradePolicy().rollingUpgradeMonitoringPolicy().upgradeDomainTimeout());
        Assertions.assertEquals(8249216187823055571L, response.upgradePolicy().instanceCloseDelayDuration());
        Assertions.assertEquals(RollingUpgradeMode.UNMONITORED_AUTO, response.upgradePolicy().upgradeMode());
        Assertions.assertEquals(7045549218691241885L, response.upgradePolicy().upgradeReplicaSetCheckTimeout());
        Assertions.assertEquals(true, response.upgradePolicy().recreateApplication());
        Assertions.assertEquals("wey", response.managedIdentities().get(0).name());
        Assertions.assertEquals("qdunvmnnrwrbior", response.managedIdentities().get(0).principalId());
    }
}
