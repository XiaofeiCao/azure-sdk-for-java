// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.servicefabricmanagedclusters.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterMonitoringPolicy;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterUpgradeDeltaHealthPolicy;
import com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterUpgradePolicy;
import org.junit.jupiter.api.Assertions;

public final class ClusterUpgradePolicyTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ClusterUpgradePolicy model = BinaryData.fromString(
            "{\"forceRestart\":false,\"healthPolicy\":{\"maxPercentUnhealthyNodes\":272856491,\"maxPercentUnhealthyApplications\":1563203885},\"deltaHealthPolicy\":{\"maxPercentDeltaUnhealthyNodes\":1941529863,\"maxPercentUpgradeDomainDeltaUnhealthyNodes\":648968318,\"maxPercentDeltaUnhealthyApplications\":1648570452},\"monitoringPolicy\":{\"healthCheckWaitDuration\":\"aw\",\"healthCheckStableDuration\":\"eaivxwczel\",\"healthCheckRetryTimeout\":\"c\",\"upgradeTimeout\":\"r\",\"upgradeDomainTimeout\":\"lsfeaenwabfatkld\"},\"upgradeReplicaSetCheckTimeout\":\"bjhwuaan\"}")
            .toObject(ClusterUpgradePolicy.class);
        Assertions.assertEquals(false, model.forceRestart());
        Assertions.assertEquals(272856491, model.healthPolicy().maxPercentUnhealthyNodes());
        Assertions.assertEquals(1563203885, model.healthPolicy().maxPercentUnhealthyApplications());
        Assertions.assertEquals(1941529863, model.deltaHealthPolicy().maxPercentDeltaUnhealthyNodes());
        Assertions.assertEquals(648968318, model.deltaHealthPolicy().maxPercentUpgradeDomainDeltaUnhealthyNodes());
        Assertions.assertEquals(1648570452, model.deltaHealthPolicy().maxPercentDeltaUnhealthyApplications());
        Assertions.assertEquals("aw", model.monitoringPolicy().healthCheckWaitDuration());
        Assertions.assertEquals("eaivxwczel", model.monitoringPolicy().healthCheckStableDuration());
        Assertions.assertEquals("c", model.monitoringPolicy().healthCheckRetryTimeout());
        Assertions.assertEquals("r", model.monitoringPolicy().upgradeTimeout());
        Assertions.assertEquals("lsfeaenwabfatkld", model.monitoringPolicy().upgradeDomainTimeout());
        Assertions.assertEquals("bjhwuaan", model.upgradeReplicaSetCheckTimeout());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ClusterUpgradePolicy model = new ClusterUpgradePolicy().withForceRestart(false)
            .withHealthPolicy(new ClusterHealthPolicy().withMaxPercentUnhealthyNodes(272856491)
                .withMaxPercentUnhealthyApplications(1563203885))
            .withDeltaHealthPolicy(new ClusterUpgradeDeltaHealthPolicy().withMaxPercentDeltaUnhealthyNodes(1941529863)
                .withMaxPercentUpgradeDomainDeltaUnhealthyNodes(648968318)
                .withMaxPercentDeltaUnhealthyApplications(1648570452))
            .withMonitoringPolicy(new ClusterMonitoringPolicy().withHealthCheckWaitDuration("aw")
                .withHealthCheckStableDuration("eaivxwczel")
                .withHealthCheckRetryTimeout("c")
                .withUpgradeTimeout("r")
                .withUpgradeDomainTimeout("lsfeaenwabfatkld"))
            .withUpgradeReplicaSetCheckTimeout("bjhwuaan");
        model = BinaryData.fromObject(model).toObject(ClusterUpgradePolicy.class);
        Assertions.assertEquals(false, model.forceRestart());
        Assertions.assertEquals(272856491, model.healthPolicy().maxPercentUnhealthyNodes());
        Assertions.assertEquals(1563203885, model.healthPolicy().maxPercentUnhealthyApplications());
        Assertions.assertEquals(1941529863, model.deltaHealthPolicy().maxPercentDeltaUnhealthyNodes());
        Assertions.assertEquals(648968318, model.deltaHealthPolicy().maxPercentUpgradeDomainDeltaUnhealthyNodes());
        Assertions.assertEquals(1648570452, model.deltaHealthPolicy().maxPercentDeltaUnhealthyApplications());
        Assertions.assertEquals("aw", model.monitoringPolicy().healthCheckWaitDuration());
        Assertions.assertEquals("eaivxwczel", model.monitoringPolicy().healthCheckStableDuration());
        Assertions.assertEquals("c", model.monitoringPolicy().healthCheckRetryTimeout());
        Assertions.assertEquals("r", model.monitoringPolicy().upgradeTimeout());
        Assertions.assertEquals("lsfeaenwabfatkld", model.monitoringPolicy().upgradeDomainTimeout());
        Assertions.assertEquals("bjhwuaan", model.upgradeReplicaSetCheckTimeout());
    }
}
